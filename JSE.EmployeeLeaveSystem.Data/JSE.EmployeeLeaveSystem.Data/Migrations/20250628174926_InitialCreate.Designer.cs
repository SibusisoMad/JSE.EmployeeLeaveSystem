// <auto-generated />
using System;
using JSE.EmployeeLeaveSystem.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JSE.EmployeeLeaveSystem.Data.Migrations
{
    [DbContext(typeof(LeaveSystemContext))]
    [Migration("20250628174926_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCEO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTeamLead")
                        .HasColumnType("bit");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "lindajenkins@acme.com",
                            EmployeeNumber = "0001",
                            FullName = "Linda Jenkins",
                            IsCEO = true,
                            IsTeamLead = false,
                            Role = "CEO",
                            Team = "Management"
                        },
                        new
                        {
                            Id = 2,
                            CellNumber = "+27 55 937 274",
                            Email = "miltoncoleman@amce.com",
                            EmployeeNumber = "0002",
                            FullName = "Milton Coleman",
                            IsCEO = false,
                            IsTeamLead = true,
                            ManagerId = 1,
                            Role = "Manager",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 3,
                            CellNumber = "+27 20 915 7545",
                            Email = "colinhorton@amce.com",
                            EmployeeNumber = "0003",
                            FullName = "Colin Horton",
                            IsCEO = false,
                            IsTeamLead = true,
                            ManagerId = 1,
                            Role = "Manager",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 4,
                            CellNumber = "+27 55 979 367",
                            Email = "ellajefferson@acme.com",
                            EmployeeNumber = "2005",
                            FullName = "Ella Jefferson",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 5,
                            CellNumber = "+27 20 916 5608",
                            Email = "earlcraig@acme.com",
                            EmployeeNumber = "2006",
                            FullName = "Earl Craig",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 6,
                            CellNumber = "+36 55 949 891",
                            Email = "marshamurphy@acme.com",
                            EmployeeNumber = "2008",
                            FullName = "Marsha Murphy",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 7,
                            CellNumber = "+27 20 917 1339",
                            Email = "luisortega@acme.com",
                            EmployeeNumber = "2009",
                            FullName = "Luis Ortega",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 8,
                            Email = "fayedennis@acme.com",
                            EmployeeNumber = "2010",
                            FullName = "Faye Dennis",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 9,
                            CellNumber = "+27 20 914 1775",
                            Email = "amyburns@acme.com",
                            EmployeeNumber = "2012",
                            FullName = "Amy Burns",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 10,
                            CellNumber = "+27 55 615 463",
                            Email = "darrelweber@acme.com",
                            EmployeeNumber = "2013",
                            FullName = "Darrel Weber",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 3,
                            Role = "Employee",
                            Team = "Dev"
                        },
                        new
                        {
                            Id = 11,
                            CellNumber = "+27 55 760 177",
                            Email = "charlotteosborne@acme.com",
                            EmployeeNumber = "1005",
                            FullName = "Charlotte Osborne",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 12,
                            CellNumber = "+27 20 918 6908",
                            Email = "mariewalters@acme.com",
                            EmployeeNumber = "1006",
                            FullName = "Marie Walters",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 13,
                            CellNumber = "+27 55 525 585",
                            Email = "leonardgill@acme.com",
                            EmployeeNumber = "1008",
                            FullName = "Leonard Gill",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 14,
                            CellNumber = "+27 20 916 1335",
                            Email = "enriquethomas@acme.com",
                            EmployeeNumber = "1009",
                            FullName = "Enrique Thomas",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 15,
                            Email = "omardunn@acme.com",
                            EmployeeNumber = "1010",
                            FullName = "Omar Dunn",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 16,
                            CellNumber = "+27 55 260 127",
                            Email = "deweygeorge@acme.com",
                            EmployeeNumber = "1012",
                            FullName = "Dewey George",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 17,
                            Email = "rudylewis@acme.com",
                            EmployeeNumber = "1013",
                            FullName = "Rudy Lewis",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        },
                        new
                        {
                            Id = 18,
                            CellNumber = "+27 20 919 4882",
                            Email = "nealfrench@acme.com",
                            EmployeeNumber = "1015",
                            FullName = "Neal French",
                            IsCEO = false,
                            IsTeamLead = false,
                            ManagerId = 2,
                            Role = "Support",
                            Team = "Support"
                        });
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActionedById")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateActioned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionedById");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Annual Leave"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sick Leave"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Maternity Leave"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Paternity Leave"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Compassionate Leave"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Unpaid Leave"
                        });
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.PublicHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublicHolidays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 1,
                            Description = "New Year's Day",
                            Month = "January"
                        },
                        new
                        {
                            Id = 2,
                            Day = 21,
                            Description = "Human Rights Day",
                            Month = "March"
                        },
                        new
                        {
                            Id = 3,
                            Day = 27,
                            Description = "Freedom Day",
                            Month = "April"
                        },
                        new
                        {
                            Id = 4,
                            Day = 1,
                            Description = "Workers' Day",
                            Month = "May"
                        },
                        new
                        {
                            Id = 5,
                            Day = 16,
                            Description = "Youth Day",
                            Month = "June"
                        },
                        new
                        {
                            Id = 6,
                            Day = 9,
                            Description = "Womans Day",
                            Month = "August"
                        },
                        new
                        {
                            Id = 7,
                            Day = 24,
                            Description = "Heritage Day",
                            Month = "September"
                        },
                        new
                        {
                            Id = 8,
                            Day = 16,
                            Description = "Day of Reconciliation",
                            Month = "December"
                        },
                        new
                        {
                            Id = 9,
                            Day = 25,
                            Description = "Christmas Day",
                            Month = "December"
                        },
                        new
                        {
                            Id = 10,
                            Day = 26,
                            Description = "Day of Goodwill",
                            Month = "December"
                        },
                        new
                        {
                            Id = 11,
                            Day = 1,
                            Description = "Family Day",
                            Month = "April"
                        },
                        new
                        {
                            Id = 12,
                            Day = 18,
                            Description = "Good Friday",
                            Month = "April"
                        });
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.Employee", b =>
                {
                    b.HasOne("JSE.EmployeeLeaveSystem.Model.Employee", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.LeaveRequest", b =>
                {
                    b.HasOne("JSE.EmployeeLeaveSystem.Model.Employee", "ActionedBy")
                        .WithMany()
                        .HasForeignKey("ActionedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JSE.EmployeeLeaveSystem.Model.Employee", "Requester")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSE.EmployeeLeaveSystem.Model.LeaveType", "LeaveType")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionedBy");

                    b.Navigation("LeaveType");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.Employee", b =>
                {
                    b.Navigation("LeaveRequests");

                    b.Navigation("Subordinates");
                });

            modelBuilder.Entity("JSE.EmployeeLeaveSystem.Model.LeaveType", b =>
                {
                    b.Navigation("LeaveRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
